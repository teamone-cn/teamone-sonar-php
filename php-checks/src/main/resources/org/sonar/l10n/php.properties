rule.php.S107.param.max=Maximum authorized number of parameters
rule.php.S1479.param.max=Maximum number of case
rule.php.S1151.param.max=Maximum number of lines
rule.php.S1142.param.max=Maximum allowed return statements per function
rule.php.S100.param.format=Regular expression used to check the function names against
rule.php.S139.param.legalTrailingCommentPattern=Pattern for text of trailing comments that are allowed. By default, comments containing only one word.
rule.php.S104.param.max=Maximum authorized lines in a file.
rule.php.S103.param.maximumLineLength=The maximum authorized line length.
rule.php.S134.param.max=Maximum allowed control flow statement nesting depth.
rule.php.S1192.param.threshold=Number of times a literal must be duplicated to trigger an issue
rule.php.S1541.param.threshold=The maximum authorized complexity.
rule.php.S1451.param.headerFormat=Expected copyright and license header (plain text)
rule.php.S101.param.format=Regular expression used to check the class names against.
rule.php.S116.param.format=Regular expression used to check the field names against.
rule.php.S1067.param.max=Maximum number of allowed conditional operators in an expression
rule.php.S115.param.format=Regular expression used to check the constant names against.
rule.php.S138.param.max=Maximum authorized lines in a function
rule.php.S1448.param.maximumMethodThreshold=The maximum number of methods
rule.php.S1448.param.countNonpublicMethods=Whether or not to include non-public methods in the count
rule.php.S1311.param.max=Maximum complexity allowed.
rule.php.S1200.param.max=Maximum number of classes a single class is allowed to depend upon
rule.php.S117.param.format=Regular expression used to check the names against.
rule.php.S1808.param.namespace_blank_line="namespace" declarations should be followed by a blank line
rule.php.S1808.param.use_after_namespace="use" declarations should be placed after "namespace" declarations
rule.php.S1808.param.use_blank_line="use" declarations should be followed by a blank line
rule.php.S1808.param.open_curly_brace_classes_functions=Open curly braces should be at the beginning of a new line for classes and functions
rule.php.S1808.param.open_curly_brace_control_structures=Open curly braces should be at the end of line for control structures
rule.php.S1808.param.one_space_after=There should be exactly one space between closing parenthesis and opening curly braces
rule.php.S1808.param.one_space_before=There should be exactly one space between control structure keyword and opening parenthesis or curly brace
rule.php.S1808.param.closing_curly_brace=Close curly brace and the next "else", "catch" and "finally" keywords should be located on the same line
rule.php.S1808.param.one_space_for=There should be one space after each ";" in "for" statement
rule.php.S1808.param.space_comma=Commas should be followed by one space and not preceded by any
rule.php.S1808.param.no_space_method_name=There should not be any space after a method name
rule.php.S1808.param.foreach_space=In foreach statement there should be one space before and after "as" keyword and "=>" operator
rule.php.S1808.param.no_space=There should not be any space after the opening parenthesis and before the closing parenthesis
rule.php.S1808.param.closure_format=Closures declaration should be correctly spaced
rule.php.S1808.param.function_declaration_arguments_indentation=Arguments in method/function declarations should be correctly indented
rule.php.S1808.param.function_calls_arguments_indentation=Arguments in method/function calls should be correctly indented
rule.php.S1808.param.interfaces_indentation=List of implemented interfaces should be correctly indented
rule.php.S1808.param.extends_implements_line=Class names, "extends" and "implements" keywords should be located on the same line
